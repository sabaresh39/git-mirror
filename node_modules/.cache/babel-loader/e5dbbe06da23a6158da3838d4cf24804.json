{"ast":null,"code":"var _jsxFileName = \"/Users/SabareshK/Documents/my/git-mirror/src/components/Nav.js\";\nimport React from \"react\";\nimport { navTabs, navMap } from \"./config\";\n\nconst Nav = ({\n  counts,\n  activeTab,\n  changeTab\n}) => {\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, navTabs.length && navTabs.map((tabName, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: tabName === activeTab ? \"tab active\" : \"tab\",\n    key: index,\n    onClick: () => changeTab(tabName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, tabName, tabName !== \"Overview\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 40\n    }\n  }, counts[navMap[tabName]]))));\n};\n\nexport default Nav;","map":{"version":3,"sources":["/Users/SabareshK/Documents/my/git-mirror/src/components/Nav.js"],"names":["React","navTabs","navMap","Nav","counts","activeTab","changeTab","length","map","tabName","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,UAAhC;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA;AAArB,CAAD,KAAsC;AAChD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACM,MAAR,IACCN,OAAO,CAACO,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,kBACV;AACE,IAAA,SAAS,EAAED,OAAO,KAAKJ,SAAZ,GAAwB,YAAxB,GAAuC,KADpD;AAEE,IAAA,GAAG,EAAEK,KAFP;AAGE,IAAA,OAAO,EAAE,MAAMJ,SAAS,CAACG,OAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,OALH,EAMGA,OAAO,KAAK,UAAZ,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,MAAM,CAACF,MAAM,CAACO,OAAD,CAAP,CAAb,CAN7B,CADF,CAFJ,CADF;AAeD,CAhBD;;AAkBA,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport { navTabs, navMap } from \"./config\";\n\nconst Nav = ({ counts, activeTab, changeTab }) => {\n  return (\n    <nav>\n      {navTabs.length &&\n        navTabs.map((tabName, index) => (\n          <div\n            className={tabName === activeTab ? \"tab active\" : \"tab\"}\n            key={index}\n            onClick={() => changeTab(tabName)}\n          >\n            {tabName}\n            {tabName !== \"Overview\" && <span>{counts[navMap[tabName]]}</span>}\n          </div>\n        ))}\n    </nav>\n  );\n};\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}