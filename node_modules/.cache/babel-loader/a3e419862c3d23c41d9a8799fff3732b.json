{"ast":null,"code":"var _jsxFileName = \"/Users/SabareshK/Documents/my/git-mirror/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { UserProfile, UserDetails } from \"./components\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [userProfile, setUserProfile] = useState({});\n  const [hasError, setErrors] = useState(false);\n  const [isFetchingData, setFetchingData] = useState(true);\n  const [counts, setCounts] = useState({});\n\n  const setCount = () => {\n    const counts = (({\n      public_repos,\n      public_gists,\n      followers,\n      following\n    }) => ({\n      public_repos,\n      public_gists,\n      followers,\n      following\n    }))(userProfile);\n\n    setCounts(counts);\n  };\n\n  async function fetchUserProfile() {\n    try {\n      const userProfile = await fetch(\"https://api.github.com/users/supreetsingh247\");\n      userProfile.json().then(res => setUserProfile(res)).catch(err => setErrors(err));\n      setFetchingData(false);\n    } catch (err) {\n      setErrors(err);\n    }\n  }\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, []);\n  useEffect(() => {\n    setCount();\n  }, [userProfile]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dummy-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), !isFetchingData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, !hasError && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserProfile, {\n    data: userProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(UserDetails, {\n    counts: counts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })), hasError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }\n  }, \"Error\")), isFetchingData && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }\n  }, \"Loading...\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/SabareshK/Documents/my/git-mirror/src/App.js"],"names":["React","useState","useEffect","UserProfile","UserDetails","App","userProfile","setUserProfile","hasError","setErrors","isFetchingData","setFetchingData","counts","setCounts","setCount","public_repos","public_gists","followers","following","fetchUserProfile","fetch","json","then","res","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,cAAzC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,SAAX,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,cAAD,EAAiBC,eAAjB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMa,QAAQ,GAAG,MAAM;AACrB,UAAMF,MAAM,GAAG,CAAC,CAAC;AAAEG,MAAAA,YAAF;AAAgBC,MAAAA,YAAhB;AAA8BC,MAAAA,SAA9B;AAAyCC,MAAAA;AAAzC,KAAD,MAA2D;AACzEH,MAAAA,YADyE;AAEzEC,MAAAA,YAFyE;AAGzEC,MAAAA,SAHyE;AAIzEC,MAAAA;AAJyE,KAA3D,CAAD,EAKXZ,WALW,CAAf;;AAMAO,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GARD;;AAUA,iBAAeO,gBAAf,GAAkC;AAChC,QAAI;AACF,YAAMb,WAAW,GAAG,MAAMc,KAAK,CAC7B,8CAD6B,CAA/B;AAGAd,MAAAA,WAAW,CACRe,IADH,GAEGC,IAFH,CAESC,GAAD,IAAShB,cAAc,CAACgB,GAAD,CAF/B,EAGGC,KAHH,CAGUC,GAAD,IAAShB,SAAS,CAACgB,GAAD,CAH3B;AAIAd,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KATD,CASE,OAAOc,GAAP,EAAY;AACZhB,MAAAA,SAAS,CAACgB,GAAD,CAAT;AACD;AACF;;AAEDvB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACR,WAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,CAACI,cAAD,iBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,QAAD,iBACC,uDACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEF,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEM,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAOGJ,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPf,CAHJ,EAaGE,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbrB,CADF;AAiBD,CAxDD;;AA0DA,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { UserProfile, UserDetails } from \"./components\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [userProfile, setUserProfile] = useState({});\n  const [hasError, setErrors] = useState(false);\n  const [isFetchingData, setFetchingData] = useState(true);\n  const [counts, setCounts] = useState({});\n\n  const setCount = () => {\n    const counts = (({ public_repos, public_gists, followers, following }) => ({\n      public_repos,\n      public_gists,\n      followers,\n      following\n    }))(userProfile);\n    setCounts(counts);\n  };\n\n  async function fetchUserProfile() {\n    try {\n      const userProfile = await fetch(\n        \"https://api.github.com/users/supreetsingh247\"\n      );\n      userProfile\n        .json()\n        .then((res) => setUserProfile(res))\n        .catch((err) => setErrors(err));\n      setFetchingData(false);\n    } catch (err) {\n      setErrors(err);\n    }\n  }\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, []);\n\n  useEffect(() => {\n    setCount();\n  }, [userProfile]);\n\n  return (\n    <React.Fragment>\n      <div className='dummy-nav'></div>\n      {!isFetchingData && (\n        <div className='container'>\n          {!hasError && (\n            <>\n              <UserProfile data={userProfile} />\n              <UserDetails counts={counts} />\n            </>\n          )}\n          {hasError && <div>Error</div>}\n        </div>\n      )}\n      {isFetchingData && <div>Loading...</div>}\n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}